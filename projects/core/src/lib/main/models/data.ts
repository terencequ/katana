import { v4 as uuidv4 } from 'uuid';

/**
 * Stores information about data. Will always be uniquely identifiable on the frontend via a UUID.
 */
export default class Data<TBody> {

    private id: string;
    private body?: TBody;

    constructor() {
        this.id = uuidv4();
        this.body = undefined;
    }

    /**
     * Unique identifier for this data. Is independent of the body's unique identifier and is purely for frontend use.
     * This field is readonly and is autogenerated on construction of any data object.
     * @returns Unique identifier for this data.
     */
    public getId(){
        return this.id;
    }

    /**
     * Set the body for this data.
     */
    public setBody(body: TBody) {
        this.body = body;
    }

    /**
     * Get the body for this data.
     * @returns The body for this data.
     */
    public getBody(): TBody | undefined {
        return this.body;
    }

}